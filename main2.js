// // Самомтоятельная  рабрта;

// // В файле скрипта создать 2 переменные (money и time), которые будут получать данные от пользователя:;

// let money = +prompt('Ваш бюджет на месяц?', ''),//Первая будет спрашивать "Ваш бюджет на месяц?";

//     time =  prompt('Ведите дату в формате YYYY-MM-DD', '');// Вторая "Введите дату в формате YYYY-MM-DD";

// // Перенос все в функцию;
// let money,time; // переменые создал глпбально что бы функция могла увидеть;

// function start (){
//      money = +prompt('Ваш бюджет на месяц?', '');

//      time =  prompt('Ведите дату в формате YYYY-MM-DD', '');

//     //цикл while: условие: 1 - если это не номер, 2 - или это пустая строка, 3 - или нет ничего;
//      while(isNaN(money)  || money == "" || money == null ){ //то тогда -
//         money = +prompt('Ваш бюджет на месяц?', ''); // - выполни обратно это условие;
//      }
// }
//      start(); // вызвана функция;

// let appData = {           //объект appData;

//  budget : money,      //бюджет (передаем сюда переменную из п.2);
//  expenses : {},        //объект с обязательными расходами - expenses;
//  optionalExpenses:{}, //объект с необязательными расходами - optionalExpenses;
//  income : [],        //массив данных с доп. доходом - income (оставляем пока пустым);
//  timeData:time,      //данные времени - timeData (передаем сюда переменную из п.2);
//  savings: true     //свойство savings (выставляем его как false)

// };

// // //задана по два вопроса персону;
// // let a1 = prompt('Ведите обязательную статью расходов в этом месяце', ''),
// // a2 = prompt('Во сколько обойдется?', ''),
// // a3 = prompt('Ведите обязательную статью расходов в этом месяце', ''),
// // a4 = prompt('Во сколько обойдется?', '');
// // //Эти вопросы перенесли в цикл;

// // appData.expenses[a1] = a2;  //добавление в внутри объекта, в объект expenses;
// // appData.expenses[a3] = a4;    //все это добавлил в цикл в упрощенном ввиде;

// //Перенос в функцию из начально не было функции;
// function chooseExpenses(){

// //чтобы не повторять вопросы про расходов в ручную, запишем в цикл;
// for(let i = 0; i < 2; i++){ //цикл закончиться тогда когда вопросы про расходов не будет(a1 - a4);
//     let a = prompt('Ведите обязательную статью расходов в этом месяце', ''),
//         b = prompt('Во сколько обойдется?', '');

//         //дана условие для того что бы строчки не были пустыми
//         // и длина строк не привышала 50 символов;
//     if( (typeof(a)) === 'string' && (typeof(a)) != null && (typeof(b)) != null
//       && a != '' && b != '' && a .length < 50){
//           console.log('done'); // показывай все;
//           appData.expenses[a] = b;  //полученные строку добавим в [a] - ключ и в b - значение;
//       } else {
//            i = i - 1; // возращает цикл обратно, если не одна из условий не сработает;
//       }

// }
// }
// chooseExpenses();

// // в глобпльном объекте создал новое свойство - moneyPerDay и внтри добавленно бюджет;
// // appData.moneyPerDay  = appData.budget / 30;

// //из за этого обернули (appData.budget / 30);
// appData.moneyPerDay = (appData.budget / 30).toFixed(); // здесь исп. метод для округление чисел;

// // alert(appData.budget / 30);   // бюджет на один день;
// alert('Ежедневный бюджет' + appData.moneyPerDay);

// function detectLevel(){
// if(appData.moneyPerDay < 100) {
//     console.log('Минимальный уровень достатка');
// }else if (appData.moneyPerDay > 100 && appData.moneyPerDay < 2000) {
//     console.log('Средний уровень достатка');
// }else if (appData.moneyPerDay > 2000) {
//     console.log('Высокий уровень достатка');
// }else {
//     console.log('Произошла ошибка');
// }
// }
// detectLevel();
// // console.log(appData);

// //функцию для подсчета депозита если есть сбережение;
// function checkSavings(){
//     if (appData.savings == true) {
//         let save = +prompt('Какова сумма накоплении?'),
//          percent = +prompt('Под какой процент?');

//          appData.monthIncome = save / 100 / 12 * percent;
//          alert("Доход в месяц с вашего депозита: " + appData.monthIncome);
//     }
// }
// checkSavings();